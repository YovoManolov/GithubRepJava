package AnnotationDemonstration;
import java.lang.annotation.*;
import java.lang.reflect.*;

@Retention(RetentionPolicy.RUNTIME)
@Repeatable(MyRepeatedAnnos.class)
@interface MyAnno{
	String str () default  "testing";
	int val() default 100;
}

//Container annotation
@Retention(RetentionPolicy.RUNTIME)
@interface MyRepeatedAnnos{
	MyAnno [] value () ;
}


class RepeatAnno {
	
		@MyAnno(str = "Second annotation", val = 100)
	
	public static void myMeth(String str ,int i){
		RepeatAnno ob = new RepeatAnno();
		try{
			Class<?> c = ob.getClass();
			Method m = c.getDeclaredMethod("myMeth", String.class , int.class);
			Annotation anno = m.getAnnotation(MyRepeatedAnnos.class);
			System.out.println(anno);
			
		}catch(NoSuchMethodException e){
			System.out.println("Method not found");
		}
	}
	
	public static void main(String[] args) {
		myMeth("test" ,19);

	}

}
