/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package firstPackage;

import firstPackage.Appointment.TypeOfAppointments;
import java.text.SimpleDateFormat;
import java.util.Scanner;
/**
 *
 * @author yovo
 */
public class AddNewAppointment extends javax.swing.JFrame {
    /**
     *
     */
    public WorkWithHashMap wwhm = null;
    Message m ;
    public AddNewAppointment(WorkWithHashMap wwhm) {
        initComponents();
        m = new Message();
        this.wwhm = wwhm;
    }
     public AddNewAppointment() {
        initComponents();
    }
    
    
    private Appointment setAppointment(){
        TypeOfAppointments typeOfApp  = null;
        if(meetingCheckBox.isSelected()){
            typeOfApp = TypeOfAppointments.meeting;
        }else if (taskCheckBox.isSelected())  
            typeOfApp = TypeOfAppointments.task;
        else m.setMessage("type of appointment error !!!"); 
        SimpleDateFormat sdf = new SimpleDateFormat("dd/ww/MM/yyyy");
                Appointment app = new Appointment(nameTextField.getText()
                        ,descriptionTextField.getText()
               ,sdf.format(DayPlanner.mainCalendar.getDate()),typeOfApp);
                
         return app;
    }
    private void saveAppToMap() {
        Appointment app = setAppointment();
        wwhm.addAppointmentToHashMap(app);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel4 = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        EnterNameOfAppLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        NameOfAppLabel = new javax.swing.JLabel();
        EnterDescriptionOfAppLabel = new javax.swing.JLabel();
        descriptionTextField = new javax.swing.JTextField();
        meetingCheckBox = new javax.swing.JCheckBox();
        taskCheckBox = new javax.swing.JCheckBox();
        addAppToMapButton = new javax.swing.JButton();

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Choose type of Appointment");

        jInternalFrame1.setTitle("Add appointment ");
        jInternalFrame1.setVisible(true);

        EnterNameOfAppLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EnterNameOfAppLabel.setText("Enter name for your new Appointmet");

        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });

        NameOfAppLabel.setText(" Name of Appoint :");

        EnterDescriptionOfAppLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EnterDescriptionOfAppLabel.setText("Enter description of your new Appointment");

        descriptionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionTextFieldActionPerformed(evt);
            }
        });

        meetingCheckBox.setText("Meeting");
        meetingCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        taskCheckBox.setText("Task");
        taskCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        taskCheckBox.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        addAppToMapButton.setText("Add");
        addAppToMapButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAppToMapButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EnterDescriptionOfAppLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EnterNameOfAppLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(NameOfAppLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(taskCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(meetingCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(addAppToMapButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addComponent(EnterNameOfAppLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(NameOfAppLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EnterDescriptionOfAppLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(taskCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(meetingCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addAppToMapButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void descriptionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionTextFieldActionPerformed
        // TODO add your handling code here:
        Scanner sc = new Scanner(System.in);
        descriptionTextField.setText(sc.next());
    }//GEN-LAST:event_descriptionTextFieldActionPerformed

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
        Scanner sc = new Scanner (System.in );
        nameTextField.setText(sc.next());
    }//GEN-LAST:event_nameTextFieldActionPerformed
 
  //Add appointment to  file
    private void addAppToMapButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAppToMapButtonActionPerformed
        // TODO add your handling code here
        //we add the current writen Appointment into the Map
        saveAppToMap();
    }//GEN-LAST:event_addAppToMapButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : 
                    javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewAppointment.class.
                    getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewAppointment.class.
                    getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewAppointment.class.
                    getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewAppointment.class.
                    getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new AddNewAppointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel EnterDescriptionOfAppLabel;
    private javax.swing.JLabel EnterNameOfAppLabel;
    private javax.swing.JLabel NameOfAppLabel;
    private javax.swing.JButton addAppToMapButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JCheckBox meetingCheckBox;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JCheckBox taskCheckBox;
    // End of variables declaration//GEN-END:variables
}
